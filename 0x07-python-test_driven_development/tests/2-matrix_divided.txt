The 2-matrix_divided.py module
==================================

Using `` matrix_divided(matrix, div) ``
----------------------------
::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 4)
    [[0.25, 0.5, 0.75], [1.0, 1.25, 1.5]]

::
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], -3)
    [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

::
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

::
    >>> matrix_divided([5, [4, 5, 6]], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix_divided([[4, 5, 6], 5], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix_divided([[4, 5, 6], ['Hi', 6, 7]], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix_divided([[4.6, 5.0, 6], [4, 6.8, 8.9]], 4)
    [[1.15, 1.25, 1.5], [1.0, 1.7, 2.23]]

::
    >>> matrix_divided([[1, 2, 3], [4, 6.8, 8.9]], None)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

::
    >>> matrix_divided(None, 4)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
