The 0-add_integer.py module
==================================

Using `` add_integer(a, b=98) ``
----------------------------
::
    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(5, 7)
    12

::
    >>> add_integer(5, -7)
    -2

::
    >>> add_integer("5", "7")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

::
    >>> add_integer(5, float('inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

::
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

::
    >>> add_integer(5, float('b'))
    Traceback (most recent call last):
        ...
    ValueError: could not convert string to float: 'b'

::

    >>> add_integer(5, float('NaN'))
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer

::
    >>> add_integer(5.0, 7.0)
    12

::
    >>> add_integer(5.0, 7)
    12

::
    >>> add_integer(5, -7.0)
    -2

::
    >>> add_integer('a', 7)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

::
    >>> add_integer(5, 'b')
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

::
    >>> add_integer(5)
    103

::
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

::
