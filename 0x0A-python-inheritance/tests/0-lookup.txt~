The 0-lookup.py module
==================================

Using `` lookup(obj) ``
----------------------------
::
    >>> lookup = __import__('0-lookup').lookup

::
    >>> class MyClass2(object):
    ...     my_attr1 = 3
    ...     def my_meth(self):
    ...         pass
    >>> lookup(MyClass2)
    ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'my_attr1', 'my_meth']

::
    >>> class MyClass1:
    ...     pass
    >>> lookup(MyClass1)
    ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__']

::
    >>> lookup(None)
    ['__bool__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']

::
    >>> lookup(int, float)
    Traceback (most recent call last):
        ...
    TypeError: lookup() takes 1 positional argument but 2 were given

::
    >>> lookup()
    Traceback (most recent call last):
        ...
    TypeError: lookup() missing 1 required positional argument: 'obj'

::

